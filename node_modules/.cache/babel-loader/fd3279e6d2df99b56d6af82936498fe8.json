{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studia\\\\semestr 5\\\\biu\\\\projekt1-MarcinRozkwitalski\\\\src\\\\App.js\";\nimport './App.css';\nimport morseCodes from './components/morseCodes';\nimport morseCodesDotsDashes from \"./components/morseCodesDotsDashes\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.downloadInputTxtFile = () => {\n      const element = document.createElement(\"a\");\n      const file = new Blob([document.getElementById('input').value], {\n        type: 'text/plain;charset=utf-8'\n      });\n      element.href = URL.createObjectURL(file);\n      element.download = \"inputFile.txt\";\n      document.body.appendChild(element);\n      element.click();\n    };\n\n    this.downloadOutputTxtFile = () => {\n      const element = document.createElement(\"a\");\n      const file = new Blob([document.getElementById('output').value], {\n        type: 'text/plain;charset=utf-8'\n      });\n      element.href = URL.createObjectURL(file);\n      element.download = \"outputFile.txt\";\n      document.body.appendChild(element);\n      element.click();\n    };\n\n    this.setOption = e => {\n      this.radioOption = e.target.value;\n    };\n\n    this.state = {\n      input: \"\",\n      output: \"\",\n      valueOfA: \"\",\n      valueOfB: \"\",\n      valueOfKeyword: \"\",\n      radioOption: \"\",\n      showHideMorse: true,\n      showHideAffine: false,\n      showHideVigenere: false\n    };\n    this.hideComponent = this.hideComponent.bind(this);\n  }\n\n  hideComponent(name) {\n    switch (name) {\n      case \"showHideMorse\":\n        this.setState({\n          showHideMorse: this.state.showHideMorse = true\n        });\n        this.setState({\n          showHideAffine: this.state.showHideAffine = false\n        });\n        this.setState({\n          showHideVigenere: this.state.showHideVigenere = false\n        });\n        break;\n\n      case \"showHideAffine\":\n        this.setState({\n          showHideMorse: this.state.showHideMorse = false\n        });\n        this.setState({\n          showHideAffine: this.state.showHideAffine = true\n        });\n        this.setState({\n          showHideVigenere: this.state.showHideVigenere = false\n        });\n        break;\n\n      case \"showHideVigenere\":\n        this.setState({\n          showHideMorse: this.state.showHideMorse = false\n        });\n        this.setState({\n          showHideAffine: this.state.showHideAffine = false\n        });\n        this.setState({\n          showHideVigenere: this.state.showHideVigenere = true\n        });\n        break;\n\n      default:\n    }\n  }\n\n  setValueOfA(a) {\n    this.valueOfA = a;\n  }\n\n  setValueOfB(b) {\n    this.valueOfB = b;\n  }\n\n  setValueOfKeyword(keyword) {\n    this.valueOfKeyword = keyword;\n  }\n\n  convert(input) {\n    let showHideMorse = this.state.showHideMorse;\n    let showHideAffine = this.state.showHideAffine;\n    let showHideVigenere = this.state.showHideVigenere;\n\n    if (showHideMorse === true) {\n      let output = \"\";\n      let morseArray;\n\n      if (this.radioOption === \"encrypt\") {\n        morseArray = input.split(\"\");\n\n        for (let i = 0; i < morseArray.length; i++) {\n          if (morseArray[i] === \" \") {\n            output += \" \";\n          } else {\n            output += morseCodes[morseArray[i]];\n          }\n        }\n\n        output += \" \";\n        this.setState({\n          output,\n          input\n        });\n      }\n\n      if (this.radioOption === \"decrypt\") {\n        morseArray = input.split(\" \");\n\n        for (let i = 0; i < morseArray.length; i++) {\n          output += morseCodesDotsDashes[morseArray[i]];\n        }\n\n        this.setState({\n          output,\n          input\n        });\n      }\n    }\n\n    if (showHideAffine === true) {\n      let chars = input.split(\"\");\n      let currChar = chars;\n      let output;\n      let a = this.valueOfA;\n      let b = this.valueOfB;\n      let invert = 0;\n      let encryptedWord = \"\";\n      let currInt = 0;\n      let currEnc = \"\";\n\n      if (this.radioOption === \"encrypt\") {\n        for (let i = 0; i < chars.length; i++) {\n          if (currChar[i] == \" \" || currChar[i] == \",\" || currChar[i] == \".\") {\n            if (currChar[i] == \" \") {\n              encryptedWord += \" \";\n            }\n\n            if (currChar[i] == \",\") {\n              encryptedWord += \",\";\n            }\n\n            if (currChar[i] == \".\") {\n              encryptedWord += \".\";\n            }\n          } else {\n            currInt = parseInt(currChar[i], 36) - 10;\n            currEnc = (a * currInt + b) % 26;\n            encryptedWord += String.fromCharCode(97 + currEnc);\n          }\n        }\n\n        output = encryptedWord;\n        this.setState({\n          output,\n          input\n        });\n      }\n\n      if (this.radioOption === \"decrypt\") {\n        for (let i = 0; i < chars.length; i++) {\n          for (let j = 0; j < 26; j++) {\n            if (a * j % 26 === 1) invert = j;\n          }\n\n          if (currChar[i] == \" \" || currChar[i] == \",\" || currChar[i] == \".\") {\n            if (currChar[i] == \" \") {\n              encryptedWord += \" \";\n            }\n\n            if (currChar[i] == \",\") {\n              encryptedWord += \",\";\n            }\n\n            if (currChar[i] == \".\") {\n              encryptedWord += \".\";\n            }\n          } else {\n            currInt = parseInt(currChar[i], 36) - 10;\n            currEnc = invert * (currInt - b) % 26;\n            encryptedWord += String.fromCharCode(97 + currEnc);\n          }\n        }\n\n        output = encryptedWord;\n        this.setState({\n          output,\n          input\n        });\n      }\n    }\n\n    if (showHideVigenere === true) {\n      let vigenereArray = input.split(\"\");\n      let keyword = this.valueOfKeyword;\n      let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n      let output = \"\";\n      let j = 0;\n\n      if (this.radioOption === \"encrypt\") {\n        let cipherText = \"\";\n\n        for (let i = 0; i < vigenereArray.length; i++) {\n          const inputCharacter = vigenereArray[i];\n          const inputCharacterIndex = alphabet.indexOf(inputCharacter);\n\n          if (inputCharacterIndex === -1) {\n            cipherText += inputCharacter;\n            continue;\n          }\n\n          const keywordCharacter = keyword[j];\n          const keywordCharacterIndex = alphabet.indexOf(keywordCharacter);\n          const indicesSum = inputCharacterIndex + keywordCharacterIndex;\n          const cipherCharacterIndex = indicesSum % 26;\n          const cipherTextCharacter = alphabet[cipherCharacterIndex];\n          j = j === keyword.length - 1 ? 0 : j + 1;\n          cipherText += cipherTextCharacter;\n          output = cipherText;\n        }\n\n        this.setState({\n          output,\n          input\n        });\n      }\n\n      if (this.radioOption === \"decrypt\") {\n        let cipherText = input.split(\"\");\n        let plainText = \"\";\n\n        for (let i = 0; i < cipherText.length; i++) {\n          const ciphertextCharacter = cipherText[i];\n          const ciphertextCharacterIndex = alphabet.indexOf(ciphertextCharacter);\n\n          if (ciphertextCharacterIndex === -1) {\n            plainText += ciphertextCharacter;\n            continue;\n          }\n\n          const keyCharacter = keyword[j];\n          const keyCharacterIndex = alphabet.indexOf(keyCharacter);\n          const indicesSum = ciphertextCharacterIndex - keyCharacterIndex + 26;\n          const cipherCharacterIndex = indicesSum % 26;\n          const cipherTextCharacter = alphabet[cipherCharacterIndex];\n          j = j === keyword.length - 1 ? 0 : j + 1;\n          plainText += cipherTextCharacter;\n          output = plainText;\n        }\n\n        this.setState({\n          output,\n          input\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      showHideMorse,\n      showHideAffine,\n      showHideVigenere\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group btn-group-toggle\",\n        \"data-toggle\": \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.hideComponent(\"showHideMorse\"),\n          className: \"btn btn-primary\",\n          className: \"btn btn-primary btn-lg\",\n          children: \"ALFABET MORSE'A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.hideComponent(\"showHideAffine\"),\n          className: \"btn btn-primary\",\n          className: \"btn btn-primary btn-lg\",\n          children: \"SZYFR AFINICZNY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.hideComponent(\"showHideVigenere\"),\n          className: \"btn btn-primary\",\n          className: \"btn btn-primary btn-lg\",\n          children: \"SZYFR VIGENERE'A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), showHideMorse && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Alfabet Morse'a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 36\n      }, this), showHideAffine && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Szyfr Afiniczny\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"A\", /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                onChange: e => this.setValueOfA(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 30\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"B\", /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                onChange: e => this.setValueOfB(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 30\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 37\n      }, this), showHideVigenere && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Szyfr Vigenere'a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-4\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Keyword\", /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                onChange: e => this.setValueOfKeyword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 40\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-9\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            id: \"input\",\n            onChange: e => this.convert(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.downloadInputTxtFile,\n          className: \"btn btn-secondary\",\n          children: \"Download input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            id: \"output\",\n            value: this.state.output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.downloadOutputTxtFile,\n          className: \"btn btn-secondary\",\n          children: \"Download output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onChange: event => this.setOption(event),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"encrypt\",\n            name: \"option\",\n            id: \"encrypt\",\n            onChange: this.handleOptionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), \"\\xA0encrypt\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"decrypt\",\n            name: \"option\",\n            id: \"decrypt\",\n            onChange: this.handleOptionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), \"\\xA0decrypt\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Studia/semestr 5/biu/projekt1-MarcinRozkwitalski/src/App.js"],"names":["morseCodes","morseCodesDotsDashes","React","Component","App","constructor","props","downloadInputTxtFile","element","document","createElement","file","Blob","getElementById","value","type","href","URL","createObjectURL","download","body","appendChild","click","downloadOutputTxtFile","setOption","e","radioOption","target","state","input","output","valueOfA","valueOfB","valueOfKeyword","showHideMorse","showHideAffine","showHideVigenere","hideComponent","bind","name","setState","setValueOfA","a","setValueOfB","b","setValueOfKeyword","keyword","convert","morseArray","split","i","length","chars","currChar","invert","encryptedWord","currInt","currEnc","parseInt","String","fromCharCode","j","vigenereArray","alphabet","cipherText","inputCharacter","inputCharacterIndex","indexOf","keywordCharacter","keywordCharacterIndex","indicesSum","cipherCharacterIndex","cipherTextCharacter","plainText","ciphertextCharacter","ciphertextCharacterIndex","keyCharacter","keyCharacterIndex","render","event","handleOptionChange"],"mappings":"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","sourcesContent":["import './App.css';\nimport morseCodes from './components/morseCodes'\nimport morseCodesDotsDashes from \"./components/morseCodesDotsDashes\";\nimport React, { Component } from 'react';\n\nclass App extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            input: \"\",\n            output: \"\",\n            valueOfA: \"\",\n            valueOfB: \"\",\n            valueOfKeyword: \"\",\n            radioOption: \"\",\n            showHideMorse: true,\n            showHideAffine: false,\n            showHideVigenere: false,\n        };\n        this.hideComponent = this.hideComponent.bind(this);\n    }\n\n    downloadInputTxtFile = () => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([document.getElementById('input').value],\n            {type: 'text/plain;charset=utf-8'});\n        element.href = URL.createObjectURL(file);\n        element.download = \"inputFile.txt\";\n        document.body.appendChild(element);\n        element.click();\n    }\n\n    downloadOutputTxtFile = () => {\n        const element = document.createElement(\"a\");\n        const file = new Blob([document.getElementById('output').value],\n            {type: 'text/plain;charset=utf-8'});\n        element.href = URL.createObjectURL(file);\n        element.download = \"outputFile.txt\";\n        document.body.appendChild(element);\n        element.click();\n    }\n\n    hideComponent(name) {\n        switch (name) {\n            case \"showHideMorse\":\n                this.setState({showHideMorse: this.state.showHideMorse = true});\n                this.setState({showHideAffine: this.state.showHideAffine = false})\n                this.setState({showHideVigenere: this.state.showHideVigenere = false})\n                break;\n            case \"showHideAffine\":\n                this.setState({showHideMorse: this.state.showHideMorse = false});\n                this.setState({showHideAffine: this.state.showHideAffine = true})\n                this.setState({showHideVigenere: this.state.showHideVigenere = false})\n                break;\n            case \"showHideVigenere\":\n                this.setState({showHideMorse: this.state.showHideMorse = false});\n                this.setState({showHideAffine: this.state.showHideAffine = false})\n                this.setState({showHideVigenere: this.state.showHideVigenere = true})\n                break;\n            default:\n\n        }\n    }\n\n    setOption = e => {\n        this.radioOption = e.target.value;\n    }\n\n    setValueOfA(a) {\n        this.valueOfA = a;\n    }\n\n    setValueOfB(b) {\n        this.valueOfB = b;\n    }\n\n    setValueOfKeyword(keyword) {\n        this.valueOfKeyword = keyword;\n    }\n\n    convert(input){\n        let showHideMorse = this.state.showHideMorse;\n        let showHideAffine = this.state.showHideAffine;\n        let showHideVigenere = this.state.showHideVigenere;\n        if(showHideMorse === true) {\n            let output = \"\";\n            let morseArray;\n            if(this.radioOption === \"encrypt\") {\n                morseArray = input.split(\"\");\n                for (let i = 0; i < morseArray.length; i++) {\n                    if (morseArray[i] === \" \") {\n                        output += \" \"\n                    } else {\n                        output += morseCodes[morseArray[i]];\n                    }\n                }\n                output += \" \";\n                this.setState({output, input})\n            }\n\n            if(this.radioOption === \"decrypt\") {\n                morseArray = input.split(\" \");\n                for (let i = 0; i < morseArray.length; i++) {\n                    output += morseCodesDotsDashes[morseArray[i]];\n                }\n                this.setState({output, input})\n            }\n        }\n\n        if(showHideAffine === true) {\n            let chars = input.split(\"\");\n            let currChar = chars;\n            let output;\n            let a = this.valueOfA;\n            let b = this.valueOfB;\n            let invert = 0;\n            let encryptedWord = \"\";\n            let currInt = 0;\n            let currEnc = \"\";\n            if(this.radioOption === \"encrypt\") {\n                for (let i = 0; i < chars.length; i++) {\n                    if(currChar[i] == \" \" || currChar[i] == \",\" || currChar[i] == \".\"){\n                        if(currChar[i] == \" \"){\n                            encryptedWord += \" \";\n                        }\n                        if(currChar[i] == \",\"){\n                            encryptedWord += \",\";\n                        }\n                        if(currChar[i] == \".\"){\n                            encryptedWord += \".\";\n                        }\n                    }\n                    else {\n                        currInt = parseInt(currChar[i], 36) - 10;\n                        currEnc = ((a * currInt + b) % 26);\n                        encryptedWord += (String.fromCharCode(97 + currEnc));\n                    }\n                }\n                output = encryptedWord;\n                this.setState({output, input});\n            }\n            if(this.radioOption === \"decrypt\") {\n                for (let i = 0; i < chars.length; i++) {\n                    for (let j = 0; j < 26; j++){\n                        if ((a * j) % 26 === 1)\n                            invert = j;\n                    }\n                    if(currChar[i] == \" \" || currChar[i] == \",\" || currChar[i] == \".\"){\n                        if(currChar[i] == \" \"){\n                            encryptedWord += \" \";\n                        }\n                        if(currChar[i] == \",\"){\n                            encryptedWord += \",\";\n                        }\n                        if(currChar[i] == \".\"){\n                            encryptedWord += \".\";\n                        }\n                    }\n                    else {\n                        currInt = parseInt(currChar[i], 36) - 10;\n                        currEnc = (invert * (currInt - b)) % 26;\n                        encryptedWord += (String.fromCharCode(97 + currEnc));\n                    }\n                }\n                output = encryptedWord;\n                this.setState({output, input});\n            }\n        }\n\n        if(showHideVigenere === true){\n            let vigenereArray = input.split(\"\");\n            let keyword = this.valueOfKeyword;\n            let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n            let output = \"\";\n            let j = 0;\n            if(this.radioOption === \"encrypt\"){\n                let cipherText = \"\";\n                for (let i = 0; i < vigenereArray.length; i++) {\n                    const inputCharacter = vigenereArray[i];\n                    const inputCharacterIndex = alphabet.indexOf(inputCharacter);\n                    if (inputCharacterIndex === -1) {\n                        cipherText += inputCharacter;\n                        continue;\n                    }\n                    const keywordCharacter = keyword[j];\n                    const keywordCharacterIndex = alphabet.indexOf(keywordCharacter);\n                    const indicesSum = inputCharacterIndex + keywordCharacterIndex;\n                    const cipherCharacterIndex = indicesSum % 26;\n                    const cipherTextCharacter = alphabet[cipherCharacterIndex];\n                    j = j === keyword.length - 1 ? 0 : j + 1;\n                    cipherText += cipherTextCharacter;\n                    output = cipherText;\n                }\n                this.setState({output, input});\n            }\n\n            if(this.radioOption === \"decrypt\"){\n                let cipherText = input.split(\"\");\n                let plainText = \"\";\n                for (let i = 0; i < cipherText.length; i++) {\n                    \n                    const ciphertextCharacter = cipherText[i];\n                    const ciphertextCharacterIndex  = alphabet.indexOf(ciphertextCharacter);\n                    if (ciphertextCharacterIndex === -1) {\n                        plainText += ciphertextCharacter;\n                        continue;\n                    }\n                    const keyCharacter = keyword[j];\n                    const keyCharacterIndex = alphabet.indexOf(keyCharacter);\n                    const indicesSum = ciphertextCharacterIndex - keyCharacterIndex + 26;\n                    const cipherCharacterIndex = indicesSum % 26;\n                    const cipherTextCharacter = alphabet[cipherCharacterIndex];\n                    j = j === keyword.length - 1 ? 0 : j + 1;\n                    plainText += cipherTextCharacter;\n                    output = plainText;\n                }\n                this.setState({output, input});\n            }\n        }\n    }\n\n    render(){\n        const {showHideMorse, showHideAffine, showHideVigenere} = this.state;\n        return(\n            <div className=\"container\">\n                <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                    <button onClick={() => this.hideComponent(\"showHideMorse\")} className=\"btn btn-primary\"\n                            className=\"btn btn-primary btn-lg\">ALFABET MORSE'A\n                    </button>\n                    <button onClick={() => this.hideComponent(\"showHideAffine\")} className=\"btn btn-primary\"\n                            className=\"btn btn-primary btn-lg\">SZYFR AFINICZNY\n                    </button>\n                    <button onClick={() => this.hideComponent(\"showHideVigenere\")} className=\"btn btn-primary\"\n                            className=\"btn btn-primary btn-lg\">SZYFR VIGENERE'A\n                    </button>\n                </div>\n\n                {showHideMorse && (<div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <h1>Alfabet Morse'a</h1>\n                    </div>\n                </div>)}\n\n                {showHideAffine && (<div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <h1>Szyfr Afiniczny</h1>\n                        <div className=\"col-sm-2\">\n                        <h5>A<input className=\"form-control\"\n                                   onChange={(e)=>this.setValueOfA(e.target.value)}/> </h5>\n                        <h5>B<input className=\"form-control\"\n                                   onChange={(e)=>this.setValueOfB(e.target.value)}/> </h5>\n                        </div>\n                    </div>\n                </div>)}\n\n                {showHideVigenere && (<div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <h1>Szyfr Vigenere'a</h1>\n                        <div className=\"col-sm-4\">\n                            <h5>Keyword<input className=\"form-control\"\n                                        onChange={(e)=>this.setValueOfKeyword(e.target.value)}/> </h5>\n                        </div>\n                    </div>\n                </div>)}\n\n                <div className=\"col-sm-9\">\n                    <h3><input className=\"form-control\" id=\"input\"\n                           onChange={(e)=>this.convert(e.target.value)}/> </h3>\n                    <button onClick={this.downloadInputTxtFile} className=\"btn btn-secondary\">Download input</button>\n                    <h3><input className=\"form-control\" id=\"output\" value={this.state.output} /> </h3>\n                    <button onClick={this.downloadOutputTxtFile} className=\"btn btn-secondary\">Download output</button>\n                    <div onChange={event => this.setOption(event)}>\n                        <input type=\"radio\" value=\"encrypt\"\n                               name=\"option\" id=\"encrypt\"\n                               onChange={this.handleOptionChange} />\n                               &nbsp;encrypt&nbsp;&nbsp;&nbsp;\n\n                        <input type=\"radio\" value=\"decrypt\"\n                               name=\"option\" id=\"decrypt\"\n                               onChange={this.handleOptionChange} />\n                               &nbsp;decrypt\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}