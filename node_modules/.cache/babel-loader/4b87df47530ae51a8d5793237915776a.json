{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studia\\\\semestr 5\\\\biu\\\\projekt1-MarcinRozkwitalski\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport morseCodes from './components/morseCodes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n      output: \"\"\n    };\n  }\n\n  convertToMorse(input) {\n    let output = \"\";\n    let morseArray = input.split(\"\");\n\n    for (let i = 0; i < morseArray.length; i++) {\n      if (morseArray[i].toUpperCase() == \" \") {\n        output += \"\\xa0\\xa0\";\n      } else {\n        output += morseCodes[morseArray[i].toUpperCase()];\n      }\n    }\n\n    this.setState({\n      output,\n      input\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Morse Code Translator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            onChange: e => this.convertToMorse(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"original: \", this.state.input]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"morse: \", this.state.output]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 17\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["D:/Studia/semestr 5/biu/projekt1-MarcinRozkwitalski/src/App.js"],"names":["React","Component","ReactDOM","morseCodes","App","constructor","props","state","input","output","convertToMorse","morseArray","split","i","length","toUpperCase","setState","render","e","target","value","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACxBI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAIH;;AAEDC,EAAAA,cAAc,CAACF,KAAD,EAAO;AACjB,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIE,UAAU,GAAGH,KAAK,CAACI,KAAN,CAAY,EAAZ,CAAjB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,UAAU,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,UAAGF,UAAU,CAACE,CAAD,CAAV,CAAcE,WAAd,MAA+B,GAAlC,EAAsC;AAClCN,QAAAA,MAAM,IAAI,UAAV;AACH,OAFD,MAGK;AACDA,QAAAA,MAAM,IAAIN,UAAU,CAACQ,UAAU,CAACE,CAAD,CAAV,CAAcE,WAAd,EAAD,CAApB;AACH;AACJ;;AACD,SAAKC,QAAL,CAAc;AAACP,MAAAA,MAAD;AAASD,MAAAA;AAAT,KAAd;AACH;;AAEDS,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,SAAS,EAAC,cAAjB;AACO,YAAA,QAAQ,EAAGC,CAAD,IAAK,KAAKR,cAAL,CAAoBQ,CAAC,CAACC,MAAF,CAASC,KAA7B;AADtB;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAII;AAAA,qCAAe,KAAKb,KAAL,CAAWC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA,kCAAY,KAAKD,KAAL,CAAWE,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AArCuB;;AAwC5BP,QAAQ,CAACe,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAwBI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAxB","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport morseCodes from './components/morseCodes'\n\nclass App extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            input: \"\",\n            output: \"\"\n        }\n    }\n\n    convertToMorse(input){\n        let output = \"\"\n        let morseArray = input.split(\"\")\n        for(let i = 0; i < morseArray.length; i++){\n            if(morseArray[i].toUpperCase() == \" \"){\n                output += \"\\xa0\\xa0\"\n            }\n            else {\n                output += morseCodes[morseArray[i].toUpperCase()]\n            }\n        }\n        this.setState({output, input})\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <h1>Morse Code Translator</h1>\n                        <input className=\"form-control\"\n                               onChange={(e)=>this.convertToMorse(e.target.value)}/>\n                        <h3>original: {this.state.input}</h3>\n                        <h3>morse: {this.state.output}</h3>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<App/>, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}