{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamk\\\\Desktop\\\\morsapp\\\\morsapp\\\\src\\\\components\\\\Morse.jsx\";\nimport React, { Component } from 'react';\nimport morseCodes from \"./morseCodes\";\nimport morseCodesDotsDashes from \"./morseCodesDotsDashes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class componentName extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n      output: \"\",\n      valueOfA: 0,\n      valueOfB: 0,\n      valueOfKeyword: \"\",\n      radioOption: \"\",\n      textOfFile: \"\",\n      showHideMorse: true,\n      showHideAffine: false,\n      showHideVigenere: false\n    };\n  }\n\n  convert(input) {\n    this.setState({\n      input: input\n    });\n    let showHideMorse = this.state.showHideMorse;\n    let showHideAffine = this.state.showHideAffine;\n    let showHideVigenere = this.state.showHideVigenere; //to jest mors\n\n    if (showHideMorse === true) {\n      let output = \"\";\n      let morseArray;\n\n      if (this.state.radioOption === \"encrypt\") {\n        morseArray = input.split(\"\");\n\n        for (let i = 0; i < morseArray.length; i++) {\n          if (morseArray[i] === \" \") {\n            output += \" \";\n          } else {\n            output += morseCodes[morseArray[i]];\n          }\n        }\n\n        output += \" \";\n        console.log(output);\n        this.setState({\n          output: output\n        });\n      } else if (this.state.radioOption === \"decrypt\") {\n        morseArray = input.split(\" \");\n\n        for (let i = 0; i < morseArray.length; i++) {\n          output += morseCodesDotsDashes[morseArray[i]];\n        }\n\n        console.log(output);\n        this.setState({\n          output: output\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-9\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          id: \"input\",\n          value: this.state.input,\n          onChange: e => this.convert(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control-file\",\n        id: \"file\",\n        onChange: e => this.inputTextFromFile(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          id: \"output\",\n          value: this.state.output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.downloadOutputTxtFile,\n        className: \"btn btn-secondary\",\n        children: \"Download output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onChange: event => this.setOption(event),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"encrypt\",\n          name: \"option\",\n          id: \"encrypt\",\n          onChange: this.handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), \"\\xA0encrypt\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"decrypt\",\n          name: \"option\",\n          id: \"decrypt\",\n          onChange: this.handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), \"\\xA0decrypt\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/adamk/Desktop/morsapp/morsapp/src/components/Morse.jsx"],"names":["React","Component","morseCodes","morseCodesDotsDashes","componentName","constructor","props","state","input","output","valueOfA","valueOfB","valueOfKeyword","radioOption","textOfFile","showHideMorse","showHideAffine","showHideVigenere","convert","setState","morseArray","split","i","length","console","log","render","e","target","value","inputTextFromFile","downloadOutputTxtFile","event","setOption","handleOptionChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport morseCodes from \"./morseCodes\";\r\nimport morseCodesDotsDashes from \"./morseCodesDotsDashes\";\r\nexport default class componentName extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          input: \"\",\r\n          output: \"\",\r\n          valueOfA: 0,\r\n          valueOfB: 0,\r\n          valueOfKeyword: \"\",\r\n          radioOption: \"\",\r\n          textOfFile: \"\",\r\n          showHideMorse: true,\r\n          showHideAffine: false,\r\n          showHideVigenere: false,\r\n        };\r\n      }\r\n\r\n\r\n      convert(input) {\r\n        this.setState({ input: input });\r\n        let showHideMorse = this.state.showHideMorse;\r\n        let showHideAffine = this.state.showHideAffine;\r\n        let showHideVigenere = this.state.showHideVigenere;\r\n    \r\n        //to jest mors\r\n        if (showHideMorse === true) {\r\n          let output = \"\";\r\n          let morseArray;\r\n          if (this.state.radioOption === \"encrypt\") {\r\n            morseArray = input.split(\"\");\r\n            for (let i = 0; i < morseArray.length; i++) {\r\n              if (morseArray[i] === \" \") {\r\n                output += \" \";\r\n              } else {\r\n                output += morseCodes[morseArray[i]];\r\n              }\r\n            }\r\n            output += \" \";\r\n            console.log(output);\r\n            this.setState({ output: output });\r\n          } else if (this.state.radioOption === \"decrypt\") {\r\n            morseArray = input.split(\" \");\r\n            for (let i = 0; i < morseArray.length; i++) {\r\n              output += morseCodesDotsDashes[morseArray[i]];\r\n            }\r\n            console.log(output);\r\n            this.setState({ output: output });\r\n          }\r\n        }\r\n\r\n      }\r\n  render() {\r\n    return (\r\n        <div className=\"col-sm-9\">\r\n        <h3>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"input\"\r\n            value={this.state.input}\r\n            onChange={(e) => this.convert(e.target.value)}\r\n          />{\" \"}\r\n        </h3>\r\n        <input\r\n          type=\"file\"\r\n          className=\"form-control-file\"\r\n          id=\"file\"\r\n          onChange={(e) => this.inputTextFromFile(e)}\r\n        />\r\n        <h3>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"output\"\r\n            value={this.state.output}\r\n          />{\" \"}\r\n        </h3>\r\n        <button\r\n          onClick={this.downloadOutputTxtFile}\r\n          className=\"btn btn-secondary\"\r\n        >\r\n          Download output\r\n        </button>\r\n        <div onChange={(event) => this.setOption(event)}>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"encrypt\"\r\n            name=\"option\"\r\n            id=\"encrypt\"\r\n            onChange={this.handleOptionChange}\r\n          />\r\n          &nbsp;encrypt&nbsp;&nbsp;&nbsp;\r\n          <input\r\n            type=\"radio\"\r\n            value=\"decrypt\"\r\n            name=\"option\"\r\n            id=\"decrypt\"\r\n            onChange={this.handleOptionChange}\r\n          />\r\n          &nbsp;decrypt\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}