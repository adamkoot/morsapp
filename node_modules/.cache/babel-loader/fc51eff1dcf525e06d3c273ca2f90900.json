{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studia\\\\semestr 5\\\\biu\\\\projekt1-MarcinRozkwitalski\\\\src\\\\components\\\\QuestionCard.tsx\";\nimport React from 'react'; // Types\n\n// Styles\nimport { Wrapper, ButtonWrapper } from './QuestionCard.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuestionCard = ({\n  question,\n  answers,\n  callback,\n  userAnswer,\n  questionNr,\n  totalQuestions\n}) => /*#__PURE__*/_jsxDEV(Wrapper, {\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"number\",\n    children: [\"Question: \", questionNr, \" / \", totalQuestions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    dangerouslySetInnerHTML: {\n      __html: question\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: answers.map(answer => /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n      correct: (userAnswer === null || userAnswer === void 0 ? void 0 : userAnswer.correctAnswer) === answer,\n      userClicked: (userAnswer === null || userAnswer === void 0 ? void 0 : userAnswer.answer) === answer,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: userAnswer ? true : false,\n        value: answer,\n        onClick: callback,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: answer\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, answer, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 5\n}, this);\n\n_c = QuestionCard;\nexport default QuestionCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"sources":["D:/Studia/semestr 5/biu/projekt1-MarcinRozkwitalski/src/components/QuestionCard.tsx"],"names":["React","Wrapper","ButtonWrapper","QuestionCard","question","answers","callback","userAnswer","questionNr","totalQuestions","__html","map","answer","correctAnswer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,uBAAvC;;;AAWA,MAAMC,YAA6B,GAAG,CAAC;AACIC,EAAAA,QADJ;AAEIC,EAAAA,OAFJ;AAGIC,EAAAA,QAHJ;AAIIC,EAAAA,UAJJ;AAKIC,EAAAA,UALJ;AAMIC,EAAAA;AANJ,CAAD,kBAQlC,QAAC,OAAD;AAAA,0BACI;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA,6BACeD,UADf,SAC8BC,cAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAII;AAAG,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEN;AAAV;AAA5B;AAAA;AAAA;AAAA;AAAA,UAJJ,eAKI;AAAA,cACKC,OAAO,CAACM,GAAR,CAAaC,MAAD,iBACT,QAAC,aAAD;AAEI,MAAA,OAAO,EAAE,CAAAL,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEM,aAAZ,MAA8BD,MAF3C;AAGI,MAAA,WAAW,EAAE,CAAAL,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEK,MAAZ,MAAuBA,MAHxC;AAAA,6BAKI;AAAQ,QAAA,QAAQ,EAAEL,UAAU,GAAG,IAAH,GAAU,KAAtC;AAA6C,QAAA,KAAK,EAAEK,MAApD;AAA4D,QAAA,OAAO,EAAEN,QAArE;AAAA,+BACI;AAAM,UAAA,uBAAuB,EAAE;AAAEI,YAAAA,MAAM,EAAEE;AAAV;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AALJ,OACSA,MADT;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UALJ;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ;;KAAMT,Y;AA6BN,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\n// Types\r\nimport { AnswerObject } from '../App';\r\n// Styles\r\nimport { Wrapper, ButtonWrapper } from './QuestionCard.styles';\r\n\r\ntype Props = {\r\n    question: string;\r\n    answers: string[];\r\n    callback: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n    userAnswer: AnswerObject | undefined;\r\n    questionNr: number;\r\n    totalQuestions: number;\r\n};\r\n\r\nconst QuestionCard: React.FC<Props> = ({\r\n                                           question,\r\n                                           answers,\r\n                                           callback,\r\n                                           userAnswer,\r\n                                           questionNr,\r\n                                           totalQuestions,\r\n                                       }) => (\r\n    <Wrapper>\r\n        <p className='number'>\r\n            Question: {questionNr} / {totalQuestions}\r\n        </p>\r\n        <p dangerouslySetInnerHTML={{ __html: question }} />\r\n        <div>\r\n            {answers.map((answer) => (\r\n                <ButtonWrapper\r\n                    key={answer}\r\n                    correct={userAnswer?.correctAnswer === answer}\r\n                    userClicked={userAnswer?.answer === answer}\r\n                >\r\n                    <button disabled={userAnswer ? true : false} value={answer} onClick={callback}>\r\n                        <span dangerouslySetInnerHTML={{ __html: answer }} />\r\n                    </button>\r\n                </ButtonWrapper>\r\n            ))}\r\n        </div>\r\n    </Wrapper>\r\n);\r\n\r\nexport default QuestionCard;"]},"metadata":{},"sourceType":"module"}