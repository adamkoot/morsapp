{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamk\\\\Desktop\\\\morsapp\\\\morsapp\\\\src\\\\components\\\\Morse.jsx\";\nimport React, { Component } from 'react';\nimport morseCodes from \"../consts/morseCodes\";\nimport morseCodesDotsDashes from \"../consts/morseCodesDotsDashes\";\nimport \"../styles/style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class componentName extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setOption = e => {\n      this.setState({\n        radioOption: e.target.value\n      });\n    };\n\n    this.inputTextFromFile = async e => {\n      e.preventDefault();\n      const reader = new FileReader();\n\n      reader.onload = async e => {\n        const text = e.target.result;\n        this.convert(text);\n        this.state.input = \"\";\n        this.state.input = text;\n      };\n\n      reader.readAsText(e.target.files[0]);\n    };\n\n    this.getAPI = link => {\n      fetch(link).then(res => res.json()).then(json => this.setState({\n        input: json.results\n      }));\n      this.convert(this.state.input);\n    };\n\n    this.state = {\n      input: \"\",\n      output: \"\",\n      valueOfA: 0,\n      valueOfB: 0,\n      valueOfKeyword: \"\",\n      radioOption: \"\",\n      textOfFile: \"\",\n      api: \"\"\n    };\n  }\n\n  convert(input) {\n    this.setState({\n      input: input.toLowerCase()\n    }); //to jest mors\n\n    let output = \"\";\n    let morseArray;\n\n    if (this.state.radioOption === \"encrypt\") {\n      morseArray = input.split(\"\");\n\n      for (let i = 0; i < morseArray.length; i++) {\n        if (morseArray[i] === \" \") {\n          output += \" \";\n        } else {\n          output += morseCodes[morseArray[i]];\n        }\n      }\n\n      output += \" \";\n      console.log(output);\n      this.setState({\n        output: output\n      });\n    } else if (this.state.radioOption === \"decrypt\") {\n      morseArray = input.split(\" \");\n\n      for (let i = 0; i < morseArray.length; i++) {\n        output += morseCodesDotsDashes[morseArray[i]];\n      }\n\n      console.log(output);\n      this.setState({\n        output: output\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-12 main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Alfabet Morse'a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Wpisz ewentualnie API:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              onChange: e => this.getAPI(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Podaj tekst\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          id: \"input\",\n          value: this.state.input,\n          onChange: e => this.convert(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control-file\",\n        id: \"file\",\n        onChange: e => this.inputTextFromFile(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          id: \"output\",\n          value: this.state.output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.downloadOutputTxtFile,\n        className: \"btn btn-secondary\",\n        children: \"Download output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onChange: event => this.setOption(event),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"encrypt\",\n          name: \"option\",\n          id: \"encrypt\",\n          onChange: this.handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), \"\\xA0encrypt\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"decrypt\",\n          name: \"option\",\n          id: \"decrypt\",\n          onChange: this.handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), \"\\xA0decrypt\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), !this.state.input && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"alert\",\n          children: \"Wprowadz tekst\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this), !this.state.radioOption && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"alert\",\n          children: \"Zaznacz co chcesz zrobi\\u0107!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/adamk/Desktop/morsapp/morsapp/src/components/Morse.jsx"],"names":["React","Component","morseCodes","morseCodesDotsDashes","componentName","constructor","props","setOption","e","setState","radioOption","target","value","inputTextFromFile","preventDefault","reader","FileReader","onload","text","result","convert","state","input","readAsText","files","getAPI","link","fetch","then","res","json","results","output","valueOfA","valueOfB","valueOfKeyword","textOfFile","api","toLowerCase","morseArray","split","i","length","console","log","render","downloadOutputTxtFile","event","handleOptionChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport morseCodes from \"../consts/morseCodes\";\r\nimport morseCodesDotsDashes from \"../consts/morseCodesDotsDashes\";\r\nimport \"../styles/style.scss\";\r\n\r\nexport default class componentName extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: \"\",\r\n            output: \"\",\r\n            valueOfA: 0,\r\n            valueOfB: 0,\r\n            valueOfKeyword: \"\",\r\n            radioOption: \"\",\r\n            textOfFile: \"\",\r\n            api:\"\",\r\n        };\r\n    }\r\n    setOption = (e) => {\r\n        this.setState({\r\n            radioOption: e.target.value,\r\n        });\r\n    };\r\n\r\n    inputTextFromFile = async (e) => {\r\n        e.preventDefault();\r\n        const reader = new FileReader();\r\n        reader.onload = async (e) => {\r\n          const text = e.target.result;\r\n          this.convert(text);\r\n          this.state.input = \"\";\r\n          this.state.input = text;\r\n        };\r\n        reader.readAsText(e.target.files[0]);\r\n      };\r\n\r\n    \r\n      getAPI = (link) =>{\r\n        fetch(link)\r\n        .then((res) => res.json())\r\n        .then((json) => this.setState({ input: json.results }));\r\n\r\n        this.convert(this.state.input);\r\n      }\r\n\r\n    convert(input) {\r\n        this.setState({ input: input.toLowerCase() });\r\n        //to jest mors\r\n\r\n        let output = \"\";\r\n        let morseArray;\r\n        if (this.state.radioOption === \"encrypt\") {\r\n            morseArray = input.split(\"\");\r\n            for (let i = 0; i < morseArray.length; i++) {\r\n                if (morseArray[i] === \" \") {\r\n                    output += \" \";\r\n                } else {\r\n                    output += morseCodes[morseArray[i]];\r\n                }\r\n            }\r\n            output += \" \";\r\n            console.log(output);\r\n            this.setState({ output: output });\r\n        } else if (this.state.radioOption === \"decrypt\") {\r\n            morseArray = input.split(\" \");\r\n            for (let i = 0; i < morseArray.length; i++) {\r\n                output += morseCodesDotsDashes[morseArray[i]];\r\n            }\r\n            console.log(output);\r\n            this.setState({ output: output });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"col-sm-12 main\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <h1>Alfabet Morse'a</h1>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n              <h5>\r\n                Wpisz ewentualnie API:\r\n                <input\r\n                  className=\"form-control\"\r\n                  onChange={(e) => this. getAPI(e.target.value)}\r\n                />{\" \"}\r\n              </h5>\r\n            </div>\r\n                </div>\r\n                \r\n                <h3>\r\n                    <p>Podaj tekst</p>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id=\"input\"\r\n                        value={this.state.input}\r\n                        onChange={(e) => this.convert(e.target.value)}\r\n                    />{\" \"}\r\n                </h3>\r\n                <input\r\n                    type=\"file\"\r\n                    className=\"form-control-file\"\r\n                    id=\"file\"\r\n                    onChange={(e) => this.inputTextFromFile(e)}\r\n                />\r\n                <h3>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id=\"output\"\r\n                        value={this.state.output}\r\n                    />{\" \"}\r\n                </h3>\r\n                <button\r\n                    onClick={this.downloadOutputTxtFile}\r\n                    className=\"btn btn-secondary\"\r\n                >\r\n                    Download output\r\n                </button>\r\n                <div onChange={(event) => this.setOption(event)}>\r\n                    <input\r\n                        type=\"radio\"\r\n                        value=\"encrypt\"\r\n                        name=\"option\"\r\n                        id=\"encrypt\"\r\n                        onChange={this.handleOptionChange}\r\n                    />\r\n                    &nbsp;encrypt&nbsp;&nbsp;&nbsp;\r\n                    <input\r\n                        type=\"radio\"\r\n                        value=\"decrypt\"\r\n                        name=\"option\"\r\n                        id=\"decrypt\"\r\n                        onChange={this.handleOptionChange}\r\n                    />\r\n                    &nbsp;decrypt\r\n                </div>\r\n\r\n                {!this.state.input && (\r\n                    <div className=\"error\">\r\n                        <p className=\"alert\">Wprowadz tekst</p>\r\n                    </div>\r\n                )}\r\n\r\n                {!this.state.radioOption && (\r\n                    <div className=\"error\">\r\n                        <p className=\"alert\">Zaznacz co chcesz zrobić!</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}