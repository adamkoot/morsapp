{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamk\\\\Desktop\\\\morsapp\\\\morsapp\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport morseCodes from \"./components/morseCodes\";\nimport morseCodesDotsDashes from \"./components/morseCodesDotsDashes\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.downloadInputTxtFile = () => {\n      const element = document.createElement(\"a\");\n      const file = new Blob([document.getElementById(\"input\").value], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      element.href = URL.createObjectURL(file);\n      element.download = \"inputFile.txt\";\n      document.body.appendChild(element);\n      element.click();\n    };\n\n    this.downloadOutputTxtFile = () => {\n      const element = document.createElement(\"a\");\n      const file = new Blob([document.getElementById(\"output\").value], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      element.href = URL.createObjectURL(file);\n      element.download = \"outputFile.txt\";\n      document.body.appendChild(element);\n      element.click();\n    };\n\n    this.setOption = e => {\n      this.setState({\n        radioOption: e.target.value\n      });\n    };\n\n    this.inputTextFromFile = async e => {\n      e.preventDefault();\n      const reader = new FileReader();\n\n      reader.onload = async e => {\n        const text = e.target.result;\n        this.convert(text);\n        this.state.input = \"\";\n        this.state.input = text;\n      };\n\n      reader.readAsText(e.target.files[0]);\n    };\n\n    this.state = {\n      input: \"\",\n      output: \"\",\n      valueOfA: 0,\n      valueOfB: 0,\n      valueOfKeyword: \"\",\n      radioOption: \"\",\n      textOfFile: \"\",\n      showHideMorse: true,\n      showHideAffine: false,\n      showHideVigenere: false\n    };\n    this.hideComponent = this.hideComponent.bind(this);\n  }\n\n  hideComponent(name) {\n    switch (name) {\n      case \"showHideMorse\":\n        this.setState({\n          showHideMorse: true\n        });\n        this.setState({\n          showHideAffine: false\n        });\n        this.setState({\n          showHideVigenere: false\n        });\n        break;\n\n      case \"showHideAffine\":\n        this.setState({\n          showHideMorse: false\n        });\n        this.setState({\n          showHideAffine: true\n        });\n        this.setState({\n          showHideVigenere: false\n        });\n        break;\n\n      case \"showHideVigenere\":\n        this.setState({\n          showHideMorse: false\n        });\n        this.setState({\n          showHideAffine: false\n        });\n        this.setState({\n          showHideVigenere: true\n        });\n        break;\n\n      default:\n    }\n  }\n\n  setValueOfA(a) {\n    this.valueOfA = parseInt(a);\n  }\n\n  setValueOfB(b) {\n    this.valueOfB = parseInt(b);\n  }\n\n  setValueOfKeyword(keyword) {\n    this.valueOfKeyword = keyword;\n  }\n\n  convert(input) {\n    this.setState({\n      input: input\n    });\n    let showHideMorse = this.state.showHideMorse;\n    let showHideAffine = this.state.showHideAffine;\n    let showHideVigenere = this.state.showHideVigenere; //to jest mors\n\n    if (showHideMorse === true) {\n      let output = \"\";\n      let morseArray;\n\n      if (this.radioOption === \"encrypt\") {\n        morseArray = input.split(\"\");\n\n        for (let i = 0; i < morseArray.length; i++) {\n          if (morseArray[i] === \" \") {\n            output += \" \";\n          } else {\n            output += morseCodes[morseArray[i]];\n          }\n        }\n\n        output += \" \";\n        this.setState({\n          output: \"lol\"\n        });\n      }\n    }\n\n    if (this.radioOption === \"decrypt\") {\n      morseArray = input.split(\" \");\n\n      for (let i = 0; i < morseArray.length; i++) {\n        output += morseCodesDotsDashes[morseArray[i]];\n      }\n\n      console.log(output);\n      this.setState({\n        output: output\n      });\n    } //to jest afiniczny\n\n\n    if (showHideAffine === true) {\n      let chars = input.split(\"\");\n      let currChar = chars;\n      let output;\n      let a = this.valueOfA;\n      let b = this.valueOfB;\n      let invert = 0;\n      let encryptedWord = \"\";\n      let currInt = 0;\n      let currEnc = \"\";\n\n      for (let j = 0; j < 100; j++) {\n        if ((26 * j + 1) % a === 0) invert = (26 * j + 1) / a;\n      }\n\n      if (this.radioOption === \"encrypt\") {\n        for (let i = 0; i < chars.length; i++) {\n          if (currChar[i] === \" \" || currChar[i] === \",\" || currChar[i] === \".\") {\n            if (currChar[i] === \" \") {\n              encryptedWord += \" \";\n            }\n\n            if (currChar[i] === \",\") {\n              encryptedWord += \",\";\n            }\n\n            if (currChar[i] === \".\") {\n              encryptedWord += \".\";\n            }\n          } else {\n            currInt = parseInt(currChar[i], 36) - 10;\n            currEnc = (a * currInt + b) % 26;\n            encryptedWord += String.fromCharCode(97 + currEnc);\n          }\n        }\n\n        output = encryptedWord;\n        this.setState({\n          output,\n          input\n        });\n      }\n\n      if (this.radioOption === \"decrypt\") {\n        for (let i = 0; i < chars.length; i++) {\n          if (currChar[i] === \" \" || currChar[i] === \",\" || currChar[i] === \".\") {\n            if (currChar[i] === \" \") {\n              encryptedWord += \" \";\n            }\n\n            if (currChar[i] === \",\") {\n              encryptedWord += \",\";\n            }\n\n            if (currChar[i] === \".\") {\n              encryptedWord += \".\";\n            }\n          } else {\n            currInt = parseInt(currChar[i], 36) - 10;\n            currEnc = invert * (currInt - b + 26) % 26;\n            encryptedWord += String.fromCharCode(97 + currEnc);\n          }\n        }\n\n        output = encryptedWord;\n        this.setState({\n          output,\n          input\n        });\n      }\n    }\n\n    if (showHideVigenere === true) {\n      let vigenereArray = input.split(\"\");\n      let keyword = this.valueOfKeyword;\n      let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n      let output = \"\";\n      let j = 0;\n\n      if (this.radioOption === \"encrypt\") {\n        let cipherText = \"\";\n\n        for (let i = 0; i < vigenereArray.length; i++) {\n          const inputCharacter = vigenereArray[i];\n          const inputCharacterIndex = alphabet.indexOf(inputCharacter);\n\n          if (inputCharacterIndex === -1) {\n            cipherText += inputCharacter;\n            continue;\n          }\n\n          const keywordCharacter = keyword[j];\n          const keywordCharacterIndex = alphabet.indexOf(keywordCharacter);\n          const indicesSum = inputCharacterIndex + keywordCharacterIndex;\n          const cipherCharacterIndex = indicesSum % 26;\n          const cipherTextCharacter = alphabet[cipherCharacterIndex];\n          j = j === keyword.length - 1 ? 0 : j + 1;\n          cipherText += cipherTextCharacter;\n          output = cipherText;\n        }\n\n        this.setState({\n          output,\n          input\n        });\n      }\n\n      if (this.radioOption === \"decrypt\") {\n        let cipherText = input.split(\"\");\n        let plainText = \"\";\n\n        for (let i = 0; i < cipherText.length; i++) {\n          if (cipherText[i] === \",\" || cipherText[i] === \".\") {\n            if (cipherText[i] === \",\") {\n              plainText += \",\";\n            }\n\n            if (cipherText[i] === \".\") {\n              plainText += \".\";\n            }\n\n            output = plainText;\n          } else {\n            const ciphertextCharacter = cipherText[i];\n            const ciphertextCharacterIndex = alphabet.indexOf(ciphertextCharacter);\n\n            if (ciphertextCharacterIndex === -1) {\n              plainText += ciphertextCharacter;\n              continue;\n            }\n\n            const keyCharacter = keyword[j];\n            const keyCharacterIndex = alphabet.indexOf(keyCharacter);\n            const indicesSum = ciphertextCharacterIndex - keyCharacterIndex + 26;\n            const cipherCharacterIndex = indicesSum % 26;\n            const cipherTextCharacter = alphabet[cipherCharacterIndex];\n            j = j === keyword.length - 1 ? 0 : j + 1;\n            plainText += cipherTextCharacter;\n            output = plainText;\n          }\n        }\n\n        this.setState({\n          output,\n          input\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      showHideMorse,\n      showHideAffine,\n      showHideVigenere\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group btn-group-toggle\",\n        \"data-toggle\": \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.hideComponent(\"showHideMorse\"),\n          className: (\"btn btn-primary\", \"btn btn-primary btn-lg\"),\n          children: \"ALFABET MORSE'A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.hideComponent(\"showHideAffine\"),\n          className: (\"btn btn-primary\", \"btn btn-primary btn-lg\"),\n          children: \"SZYFR AFINICZNY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.hideComponent(\"showHideVigenere\"),\n          className: (\"btn btn-primary\", \"btn btn-primary btn-lg\"),\n          children: \"SZYFR VIGENERE'A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), showHideMorse && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Alfabet Morse'a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), showHideAffine && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Szyfr Afiniczny\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"A\", /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                onChange: e => this.setValueOfA(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"B\", /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                onChange: e => this.setValueOfB(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), showHideVigenere && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Szyfr Vigenere'a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-4\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"Keyword\", /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                onChange: e => this.setValueOfKeyword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-9\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            id: \"input\",\n            value: this.state.input,\n            onChange: e => this.convert(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control-file\",\n          id: \"file\",\n          onChange: e => this.inputTextFromFile(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            id: \"output\",\n            value: this.state.output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.downloadOutputTxtFile,\n          className: \"btn btn-secondary\",\n          children: \"Download output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onChange: event => this.setOption(event),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"encrypt\",\n            name: \"option\",\n            id: \"encrypt\",\n            onChange: this.handleOptionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), \"\\xA0encrypt\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"decrypt\",\n            name: \"option\",\n            id: \"decrypt\",\n            onChange: this.handleOptionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), \"\\xA0decrypt\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/adamk/Desktop/morsapp/morsapp/src/App.js"],"names":["morseCodes","morseCodesDotsDashes","React","Component","App","constructor","props","downloadInputTxtFile","element","document","createElement","file","Blob","getElementById","value","type","href","URL","createObjectURL","download","body","appendChild","click","downloadOutputTxtFile","setOption","e","setState","radioOption","target","inputTextFromFile","preventDefault","reader","FileReader","onload","text","result","convert","state","input","readAsText","files","output","valueOfA","valueOfB","valueOfKeyword","textOfFile","showHideMorse","showHideAffine","showHideVigenere","hideComponent","bind","name","setValueOfA","a","parseInt","setValueOfB","b","setValueOfKeyword","keyword","morseArray","split","i","length","console","log","chars","currChar","invert","encryptedWord","currInt","currEnc","j","String","fromCharCode","vigenereArray","alphabet","cipherText","inputCharacter","inputCharacterIndex","indexOf","keywordCharacter","keywordCharacterIndex","indicesSum","cipherCharacterIndex","cipherTextCharacter","plainText","ciphertextCharacter","ciphertextCharacterIndex","keyCharacter","keyCharacterIndex","render","event","handleOptionChange"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport morseCodes from \"./components/morseCodes\";\nimport morseCodesDotsDashes from \"./components/morseCodesDotsDashes\";\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n      output: \"\",\n      valueOfA: 0,\n      valueOfB: 0,\n      valueOfKeyword: \"\",\n      radioOption: \"\",\n      textOfFile: \"\",\n      showHideMorse: true,\n      showHideAffine: false,\n      showHideVigenere: false,\n    };\n    this.hideComponent = this.hideComponent.bind(this);\n  }\n\n  downloadInputTxtFile = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([document.getElementById(\"input\").value], {\n      type: \"text/plain;charset=utf-8\",\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"inputFile.txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  downloadOutputTxtFile = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([document.getElementById(\"output\").value], {\n      type: \"text/plain;charset=utf-8\",\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"outputFile.txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  hideComponent(name) {\n    switch (name) {\n      case \"showHideMorse\":\n        this.setState({ showHideMorse: true });\n        this.setState({ showHideAffine: false });\n        this.setState({\n          showHideVigenere: false,\n        });\n        break;\n      case \"showHideAffine\":\n        this.setState({ showHideMorse: false });\n        this.setState({ showHideAffine: true });\n        this.setState({ showHideVigenere: false });\n        break;\n      case \"showHideVigenere\":\n        this.setState({ showHideMorse: false });\n        this.setState({ showHideAffine: false });\n        this.setState({ showHideVigenere: true });\n        break;\n      default:\n    }\n  }\n\n  setOption = (e) => {\n    this.setState({\n      radioOption: e.target.value,\n    });\n  };\n\n  setValueOfA(a) {\n    this.valueOfA = parseInt(a);\n  }\n\n  setValueOfB(b) {\n    this.valueOfB = parseInt(b);\n  }\n\n  setValueOfKeyword(keyword) {\n    this.valueOfKeyword = keyword;\n  }\n\n  inputTextFromFile = async (e) => {\n    e.preventDefault();\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      const text = e.target.result;\n      this.convert(text);\n      this.state.input = \"\";\n      this.state.input = text;\n    };\n    reader.readAsText(e.target.files[0]);\n  };\n\n  convert(input) {\n    this.setState({ input: input });\n    let showHideMorse = this.state.showHideMorse;\n    let showHideAffine = this.state.showHideAffine;\n    let showHideVigenere = this.state.showHideVigenere;\n\n    //to jest mors\n    if (showHideMorse === true) {\n      let output = \"\";\n      let morseArray;\n      if (this.radioOption === \"encrypt\") {\n        morseArray = input.split(\"\");\n        for (let i = 0; i < morseArray.length; i++) {\n          if (morseArray[i] === \" \") {\n            output += \" \";\n          } else {\n            output += morseCodes[morseArray[i]];\n          }\n        }\n        output += \" \";\n\n        this.setState({ output: \"lol\" });\n      }}\n\n      if (this.radioOption === \"decrypt\") {\n        morseArray = input.split(\" \");\n        for (let i = 0; i < morseArray.length; i++) {\n          output += morseCodesDotsDashes[morseArray[i]];\n        }\n        console.log(output);\n        this.setState({ output: output });\n      }\n    \n\n    //to jest afiniczny\n    if (showHideAffine === true) {\n      let chars = input.split(\"\");\n      let currChar = chars;\n      let output;\n      let a = this.valueOfA;\n      let b = this.valueOfB;\n      let invert = 0;\n      let encryptedWord = \"\";\n      let currInt = 0;\n      let currEnc = \"\";\n      for (let j = 0; j < 100; j++) {\n        if ((26 * j + 1) % a === 0) invert = (26 * j + 1) / a;\n      }\n      if (this.radioOption === \"encrypt\") {\n        for (let i = 0; i < chars.length; i++) {\n          if (\n            currChar[i] === \" \" ||\n            currChar[i] === \",\" ||\n            currChar[i] === \".\"\n          ) {\n            if (currChar[i] === \" \") {\n              encryptedWord += \" \";\n            }\n            if (currChar[i] === \",\") {\n              encryptedWord += \",\";\n            }\n            if (currChar[i] === \".\") {\n              encryptedWord += \".\";\n            }\n          } else {\n            currInt = parseInt(currChar[i], 36) - 10;\n            currEnc = (a * currInt + b) % 26;\n            encryptedWord += String.fromCharCode(97 + currEnc);\n          }\n        }\n        output = encryptedWord;\n        this.setState({ output, input });\n      }\n      if (this.radioOption === \"decrypt\") {\n        for (let i = 0; i < chars.length; i++) {\n          if (\n            currChar[i] === \" \" ||\n            currChar[i] === \",\" ||\n            currChar[i] === \".\"\n          ) {\n            if (currChar[i] === \" \") {\n              encryptedWord += \" \";\n            }\n            if (currChar[i] === \",\") {\n              encryptedWord += \",\";\n            }\n            if (currChar[i] === \".\") {\n              encryptedWord += \".\";\n            }\n          } else {\n            currInt = parseInt(currChar[i], 36) - 10;\n            currEnc = (invert * (currInt - b + 26)) % 26;\n            encryptedWord += String.fromCharCode(97 + currEnc);\n          }\n        }\n        output = encryptedWord;\n        this.setState({ output, input });\n      }\n    }\n\n    if (showHideVigenere === true) {\n      let vigenereArray = input.split(\"\");\n      let keyword = this.valueOfKeyword;\n      let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n      let output = \"\";\n      let j = 0;\n      if (this.radioOption === \"encrypt\") {\n        let cipherText = \"\";\n        for (let i = 0; i < vigenereArray.length; i++) {\n          const inputCharacter = vigenereArray[i];\n          const inputCharacterIndex = alphabet.indexOf(inputCharacter);\n          if (inputCharacterIndex === -1) {\n            cipherText += inputCharacter;\n            continue;\n          }\n          const keywordCharacter = keyword[j];\n          const keywordCharacterIndex = alphabet.indexOf(keywordCharacter);\n          const indicesSum = inputCharacterIndex + keywordCharacterIndex;\n          const cipherCharacterIndex = indicesSum % 26;\n          const cipherTextCharacter = alphabet[cipherCharacterIndex];\n          j = j === keyword.length - 1 ? 0 : j + 1;\n          cipherText += cipherTextCharacter;\n          output = cipherText;\n        }\n        this.setState({ output, input });\n      }\n\n      if (this.radioOption === \"decrypt\") {\n        let cipherText = input.split(\"\");\n        let plainText = \"\";\n        for (let i = 0; i < cipherText.length; i++) {\n          if (cipherText[i] === \",\" || cipherText[i] === \".\") {\n            if (cipherText[i] === \",\") {\n              plainText += \",\";\n            }\n            if (cipherText[i] === \".\") {\n              plainText += \".\";\n            }\n            output = plainText;\n          } else {\n            const ciphertextCharacter = cipherText[i];\n            const ciphertextCharacterIndex =\n              alphabet.indexOf(ciphertextCharacter);\n            if (ciphertextCharacterIndex === -1) {\n              plainText += ciphertextCharacter;\n              continue;\n            }\n            const keyCharacter = keyword[j];\n            const keyCharacterIndex = alphabet.indexOf(keyCharacter);\n            const indicesSum =\n              ciphertextCharacterIndex - keyCharacterIndex + 26;\n            const cipherCharacterIndex = indicesSum % 26;\n            const cipherTextCharacter = alphabet[cipherCharacterIndex];\n            j = j === keyword.length - 1 ? 0 : j + 1;\n            plainText += cipherTextCharacter;\n            output = plainText;\n          }\n        }\n        this.setState({ output, input });\n      }\n    }\n  }\n\n  render() {\n    const { showHideMorse, showHideAffine, showHideVigenere } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n          <button\n            onClick={() => this.hideComponent(\"showHideMorse\")}\n            className={(\"btn btn-primary\", \"btn btn-primary btn-lg\")}\n          >\n            ALFABET MORSE'A\n          </button>\n          <button\n            onClick={() => this.hideComponent(\"showHideAffine\")}\n            className={(\"btn btn-primary\", \"btn btn-primary btn-lg\")}\n          >\n            SZYFR AFINICZNY\n          </button>\n          <button\n            onClick={() => this.hideComponent(\"showHideVigenere\")}\n            className={(\"btn btn-primary\", \"btn btn-primary btn-lg\")}\n          >\n            SZYFR VIGENERE'A\n          </button>\n        </div>\n\n        {showHideMorse && (\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <h1>Alfabet Morse'a</h1>\n            </div>\n          </div>\n        )}\n\n        {showHideAffine && (\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <h1>Szyfr Afiniczny</h1>\n              <div className=\"col-sm-2\">\n                <h5>\n                  A\n                  <input\n                    className=\"form-control\"\n                    onChange={(e) => this.setValueOfA(e.target.value)}\n                  />{\" \"}\n                </h5>\n                <h5>\n                  B\n                  <input\n                    className=\"form-control\"\n                    onChange={(e) => this.setValueOfB(e.target.value)}\n                  />{\" \"}\n                </h5>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {showHideVigenere && (\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <h1>Szyfr Vigenere'a</h1>\n              <div className=\"col-sm-4\">\n                <h5>\n                  Keyword\n                  <input\n                    className=\"form-control\"\n                    onChange={(e) => this.setValueOfKeyword(e.target.value)}\n                  />{\" \"}\n                </h5>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"col-sm-9\">\n          <h3>\n            <input\n              className=\"form-control\"\n              id=\"input\"\n              value={this.state.input}\n              onChange={(e) => this.convert(e.target.value)}\n            />{\" \"}\n          </h3>\n          <input\n            type=\"file\"\n            className=\"form-control-file\"\n            id=\"file\"\n            onChange={(e) => this.inputTextFromFile(e)}\n          />\n          <h3>\n            <input\n              className=\"form-control\"\n              id=\"output\"\n              value={this.state.output}\n            />{\" \"}\n          </h3>\n          <button\n            onClick={this.downloadOutputTxtFile}\n            className=\"btn btn-secondary\"\n          >\n            Download output\n          </button>\n          <div onChange={(event) => this.setOption(event)}>\n            <input\n              type=\"radio\"\n              value=\"encrypt\"\n              name=\"option\"\n              id=\"encrypt\"\n              onChange={this.handleOptionChange}\n            />\n            &nbsp;encrypt&nbsp;&nbsp;&nbsp;\n            <input\n              type=\"radio\"\n              value=\"decrypt\"\n              name=\"option\"\n              id=\"decrypt\"\n              onChange={this.handleOptionChange}\n            />\n            &nbsp;decrypt\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}