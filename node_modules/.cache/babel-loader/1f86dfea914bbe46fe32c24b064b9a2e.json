{"ast":null,"code":"var _jsxFileName = \"D:\\\\Studia\\\\semestr 5\\\\biu\\\\projekt1-MarcinRozkwitalski\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport morseCodes from './components/morseCodes';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n      output: \"\"\n    };\n  }\n\n  convertToMorse(input) {\n    let output = \"\";\n    let morseArray = input.split(\"\");\n\n    for (let i = 0; i < morseArray.length; i++) {\n      if (morseArray[i].toUpperCase() == \" \") {\n        output += \"\\xa0\\xa0\";\n      } else {\n        output += morseCodes[morseArray[i].toUpperCase()];\n      }\n    }\n\n    this.setState({\n      output,\n      input\n    });\n  }\n\n  Example() {\n    const [secondVal, setSecondVal] = useState();\n  }\n\n  changeFirstValue(setSecondVal, e) {\n    const [] = useState();\n    setSecondVal(e.target.value);\n  }\n\n  changeSecondValue(SetFirstVal, e) {\n    setFirstVal(e.target.value);\n    setSecondVal(convertToMorse(setFirstVal(e.target.value)));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: firstVal,\n        onChange: changeSecondValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: secondVal,\n        onChange: changeFirstValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Studia/semestr 5/biu/projekt1-MarcinRozkwitalski/src/App.js"],"names":["morseCodes","React","useState","App","Component","constructor","props","state","input","output","convertToMorse","morseArray","split","i","length","toUpperCase","setState","Example","secondVal","setSecondVal","changeFirstValue","e","target","value","changeSecondValue","SetFirstVal","setFirstVal","render","firstVal"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAIH;;AAGDC,EAAAA,cAAc,CAACF,KAAD,EAAQ;AAClB,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIE,UAAU,GAAGH,KAAK,CAACI,KAAN,CAAY,EAAZ,CAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,UAAIF,UAAU,CAACE,CAAD,CAAV,CAAcE,WAAd,MAA+B,GAAnC,EAAwC;AACpCN,QAAAA,MAAM,IAAI,UAAV;AACH,OAFD,MAEO;AACHA,QAAAA,MAAM,IAAIT,UAAU,CAACW,UAAU,CAACE,CAAD,CAAV,CAAcE,WAAd,EAAD,CAApB;AACH;AACJ;;AACD,SAAKC,QAAL,CAAc;AAACP,MAAAA,MAAD;AAASD,MAAAA;AAAT,KAAd;AACH;;AAEDS,EAAAA,OAAO,GAAG;AACN,UAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,EAA1C;AACH;;AAMDkB,EAAAA,gBAAgB,CAACD,YAAD,EAAeE,CAAf,EAAkB;AAC9B,UAAM,KAAKnB,QAAQ,EAAnB;AACAiB,IAAAA,YAAY,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH;;AAEDC,EAAAA,iBAAiB,CAACC,WAAD,EAAcJ,CAAd,EAAiB;AAC9BK,IAAAA,WAAW,CAACL,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACAJ,IAAAA,YAAY,CAACT,cAAc,CAACgB,WAAW,CAACL,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ,CAAf,CAAZ;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAEC,QAFX;AAGI,QAAA,QAAQ,EAAEJ;AAHd;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAEN,SAFX;AAGI,QAAA,QAAQ,EAAEE;AAHd;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AA1D6B","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport morseCodes from './components/morseCodes'\nimport React, { useState } from 'react';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: \"\",\n            output: \"\"\n        }\n    }\n\n\n    convertToMorse(input) {\n        let output = \"\"\n        let morseArray = input.split(\"\")\n        for (let i = 0; i < morseArray.length; i++) {\n            if (morseArray[i].toUpperCase() == \" \") {\n                output += \"\\xa0\\xa0\"\n            } else {\n                output += morseCodes[morseArray[i].toUpperCase()]\n            }\n        }\n        this.setState({output, input})\n    }\n\n    Example() {\n        const [secondVal, setSecondVal] = useState();\n    }\n\n\n\n\n\n    changeFirstValue(setSecondVal, e) {\n        const [] = useState();\n        setSecondVal(e.target.value);\n    }\n\n    changeSecondValue(SetFirstVal, e) {\n        setFirstVal(e.target.value);\n        setSecondVal(convertToMorse(setFirstVal(e.target.value)));\n    }\n\n    render() {\n        return (\n            <div>\n                <input\n                    type='text'\n                    value={firstVal}\n                    onChange={changeSecondValue}\n                ></input>\n\n                <input\n                    type='text'\n                    value={secondVal}\n                    onChange={changeFirstValue}\n                ></input>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}