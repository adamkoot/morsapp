{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamk\\\\Desktop\\\\morsapp\\\\morsapp\\\\src\\\\components\\\\Vigener.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class componentName extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setOption = e => {\n      this.setState({\n        radioOption: e.target.value\n      });\n    };\n\n    this.getAPI = link => {\n      fetch(link).then(res => res.json()).then(json => this.setState({\n        input: json.results\n      }));\n      this.convert(this.state.input);\n    };\n\n    this.inputTextFromFile = async e => {\n      e.preventDefault();\n      const reader = new FileReader();\n\n      reader.onload = async e => {\n        const text = e.target.result;\n        this.convert(text);\n        this.state.input = \"\";\n        this.state.input = text;\n      };\n\n      reader.readAsText(e.target.files[0]);\n    };\n\n    this.state = {\n      input: \"\",\n      output: \"\",\n      valueOfA: 0,\n      valueOfB: 0,\n      valueOfKeyword: \"\",\n      radioOption: \"\",\n      textOfFile: \"\",\n      showHideMorse: true,\n      showHideAffine: false,\n      showHideVigenere: false\n    };\n  }\n\n  setValueOfKeyword(keyword) {\n    this.setState({\n      valueOfKeyword: keyword\n    });\n  }\n\n  convert(input) {\n    this.setState({\n      input: input.toLowerCase()\n    });\n    let vigenereArray = input.split(\"\");\n    let keyword = this.state.valueOfKeyword;\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    let output = \"\";\n    let j = 0;\n\n    if (this.state.radioOption === \"encrypt\") {\n      let cipherText = \"\";\n\n      for (let i = 0; i < vigenereArray.length; i++) {\n        const inputCharacter = vigenereArray[i];\n        const inputCharacterIndex = alphabet.indexOf(inputCharacter);\n\n        if (inputCharacterIndex === -1) {\n          cipherText += inputCharacter;\n          continue;\n        }\n\n        const keywordCharacter = keyword[j];\n        const keywordCharacterIndex = alphabet.indexOf(keywordCharacter);\n        const indicesSum = inputCharacterIndex + keywordCharacterIndex;\n        const cipherCharacterIndex = indicesSum % 26;\n        const cipherTextCharacter = alphabet[cipherCharacterIndex];\n        j = j === keyword.length - 1 ? 0 : j + 1;\n        cipherText += cipherTextCharacter;\n        output = cipherText;\n      }\n\n      this.setState({\n        output: output\n      });\n    }\n\n    if (this.state.radioOption === \"decrypt\") {\n      let cipherText = input.split(\"\");\n      let plainText = \"\";\n\n      for (let i = 0; i < cipherText.length; i++) {\n        if (cipherText[i] === \",\" || cipherText[i] === \".\") {\n          if (cipherText[i] === \",\") {\n            plainText += \",\";\n          }\n\n          if (cipherText[i] === \".\") {\n            plainText += \".\";\n          }\n\n          output = plainText;\n        } else {\n          const ciphertextCharacter = cipherText[i];\n          const ciphertextCharacterIndex = alphabet.indexOf(ciphertextCharacter);\n\n          if (ciphertextCharacterIndex === -1) {\n            plainText += ciphertextCharacter;\n            continue;\n          }\n\n          const keyCharacter = keyword[j];\n          const keyCharacterIndex = alphabet.indexOf(keyCharacter);\n          const indicesSum = ciphertextCharacterIndex - keyCharacterIndex + 26;\n          const cipherCharacterIndex = indicesSum % 26;\n          const cipherTextCharacter = alphabet[cipherCharacterIndex];\n          j = j === keyword.length - 1 ? 0 : j + 1;\n          plainText += cipherTextCharacter;\n          output = plainText;\n        }\n      }\n\n      this.setState({\n        output: output\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Szyfr Vigenere'a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Keyword\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              onChange: e => this.setValueOfKeyword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Keyword\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              onChange: e => this.setValueOfKeyword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Podaj tekst\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          id: \"input\",\n          value: this.state.input,\n          onChange: e => this.convert(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control-file\",\n        id: \"file\",\n        onChange: e => this.inputTextFromFile(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          id: \"output\",\n          value: this.state.output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.downloadOutputTxtFile,\n        className: \"btn btn-secondary\",\n        children: \"Download output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onChange: event => this.setOption(event),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"encrypt\",\n          name: \"option\",\n          id: \"encrypt\",\n          onChange: this.handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), \"\\xA0encrypt\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"decrypt\",\n          name: \"option\",\n          id: \"decrypt\",\n          onChange: this.handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), \"\\xA0decrypt\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), !this.state.input && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"alert\",\n          children: \"Wprowadz KEYWORD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), !this.state.radioOption && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"alert\",\n          children: \"Zaznacz co chcesz zrobi\\u0107!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), !this.state.input && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"alert\",\n          children: \"Wprowadz tekst\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/adamk/Desktop/morsapp/morsapp/src/components/Vigener.jsx"],"names":["React","Component","componentName","constructor","props","setOption","e","setState","radioOption","target","value","getAPI","link","fetch","then","res","json","input","results","convert","state","inputTextFromFile","preventDefault","reader","FileReader","onload","text","result","readAsText","files","output","valueOfA","valueOfB","valueOfKeyword","textOfFile","showHideMorse","showHideAffine","showHideVigenere","setValueOfKeyword","keyword","toLowerCase","vigenereArray","split","alphabet","j","cipherText","i","length","inputCharacter","inputCharacterIndex","indexOf","keywordCharacter","keywordCharacterIndex","indicesSum","cipherCharacterIndex","cipherTextCharacter","plainText","ciphertextCharacter","ciphertextCharacterIndex","keyCharacter","keyCharacterIndex","render","downloadOutputTxtFile","event","handleOptionChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class componentName extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: \"\",\r\n      output: \"\",\r\n      valueOfA: 0,\r\n      valueOfB: 0,\r\n      valueOfKeyword: \"\",\r\n      radioOption: \"\",\r\n      textOfFile: \"\",\r\n      showHideMorse: true,\r\n      showHideAffine: false,\r\n      showHideVigenere: false,\r\n    };\r\n  }\r\n\r\n  setOption = (e) => {\r\n    this.setState({\r\n      radioOption: e.target.value,\r\n    });\r\n  };\r\n\r\n  getAPI = (link) =>{\r\n    fetch(link)\r\n    .then((res) => res.json())\r\n    .then((json) => this.setState({ input: json.results }));\r\n\r\n    this.convert(this.state.input);\r\n  }\r\n\r\n  setValueOfKeyword(keyword) {\r\n    this.setState({\r\n      valueOfKeyword: keyword,\r\n    });\r\n  }\r\n  inputTextFromFile = async (e) => {\r\n    e.preventDefault();\r\n    const reader = new FileReader();\r\n    reader.onload = async (e) => {\r\n      const text = e.target.result;\r\n      this.convert(text);\r\n      this.state.input = \"\";\r\n      this.state.input = text;\r\n    };\r\n    reader.readAsText(e.target.files[0]);\r\n  };\r\n\r\n  convert(input) {\r\n    this.setState({ input: input.toLowerCase() });\r\n    let vigenereArray = input.split(\"\");\r\n    let keyword = this.state.valueOfKeyword;\r\n    let alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\n    let output = \"\";\r\n    let j = 0;\r\n    if (this.state.radioOption === \"encrypt\") {\r\n      let cipherText = \"\";\r\n      for (let i = 0; i < vigenereArray.length; i++) {\r\n        const inputCharacter = vigenereArray[i];\r\n        const inputCharacterIndex = alphabet.indexOf(inputCharacter);\r\n        if (inputCharacterIndex === -1) {\r\n          cipherText += inputCharacter;\r\n          continue;\r\n        }\r\n        const keywordCharacter = keyword[j];\r\n        const keywordCharacterIndex = alphabet.indexOf(keywordCharacter);\r\n        const indicesSum = inputCharacterIndex + keywordCharacterIndex;\r\n        const cipherCharacterIndex = indicesSum % 26;\r\n        const cipherTextCharacter = alphabet[cipherCharacterIndex];\r\n        j = j === keyword.length - 1 ? 0 : j + 1;\r\n        cipherText += cipherTextCharacter;\r\n        output = cipherText;\r\n      }\r\n      this.setState({ output: output });\r\n    }\r\n\r\n    if (this.state.radioOption === \"decrypt\") {\r\n      let cipherText = input.split(\"\");\r\n      let plainText = \"\";\r\n      for (let i = 0; i < cipherText.length; i++) {\r\n        if (cipherText[i] === \",\" || cipherText[i] === \".\") {\r\n          if (cipherText[i] === \",\") {\r\n            plainText += \",\";\r\n          }\r\n          if (cipherText[i] === \".\") {\r\n            plainText += \".\";\r\n          }\r\n          output = plainText;\r\n        } else {\r\n          const ciphertextCharacter = cipherText[i];\r\n          const ciphertextCharacterIndex =\r\n            alphabet.indexOf(ciphertextCharacter);\r\n          if (ciphertextCharacterIndex === -1) {\r\n            plainText += ciphertextCharacter;\r\n            continue;\r\n          }\r\n          const keyCharacter = keyword[j];\r\n          const keyCharacterIndex = alphabet.indexOf(keyCharacter);\r\n          const indicesSum = ciphertextCharacterIndex - keyCharacterIndex + 26;\r\n          const cipherCharacterIndex = indicesSum % 26;\r\n          const cipherTextCharacter = alphabet[cipherCharacterIndex];\r\n          j = j === keyword.length - 1 ? 0 : j + 1;\r\n          plainText += cipherTextCharacter;\r\n          output = plainText;\r\n        }\r\n      }\r\n      this.setState({ output: output });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"col-sm-12\">\r\n        <div className=\"row\">\r\n          \r\n            <h1>Szyfr Vigenere'a</h1>\r\n            <div className=\"col-sm-4\">\r\n              <h5>\r\n                Keyword\r\n                <input\r\n                  className=\"form-control\"\r\n                  onChange={(e) => this.setValueOfKeyword(e.target.value)}\r\n                />{\" \"}\r\n              </h5>\r\n              <h5>\r\n                Keyword\r\n                <input\r\n                  className=\"form-control\"\r\n                  onChange={(e) => this.setValueOfKeyword(e.target.value)}\r\n                />{\" \"}\r\n              </h5>\r\n            </div>\r\n          \r\n        </div>\r\n        <h3>\r\n        <p>Podaj tekst</p>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"input\"\r\n            value={this.state.input}\r\n            onChange={(e) => this.convert(e.target.value)}\r\n          />{\" \"}\r\n        </h3>\r\n        <input\r\n          type=\"file\"\r\n          className=\"form-control-file\"\r\n          id=\"file\"\r\n          onChange={(e) => this.inputTextFromFile(e)}\r\n        />\r\n        <h3>\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"output\"\r\n            value={this.state.output}\r\n          />{\" \"}\r\n        </h3>\r\n        <button\r\n          onClick={this.downloadOutputTxtFile}\r\n          className=\"btn btn-secondary\"\r\n        >\r\n          Download output\r\n        </button>\r\n        <div onChange={(event) => this.setOption(event)}>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"encrypt\"\r\n            name=\"option\"\r\n            id=\"encrypt\"\r\n            onChange={this.handleOptionChange}\r\n          />\r\n          &nbsp;encrypt&nbsp;&nbsp;&nbsp;\r\n          <input\r\n            type=\"radio\"\r\n            value=\"decrypt\"\r\n            name=\"option\"\r\n            id=\"decrypt\"\r\n            onChange={this.handleOptionChange}\r\n          />\r\n          &nbsp;decrypt\r\n        </div>\r\n\r\n        {!this.state.input && (\r\n          <div className=\"error\">\r\n            <p className=\"alert\">Wprowadz KEYWORD</p>\r\n          </div>\r\n        )}\r\n\r\n        {!this.state.radioOption && (\r\n          <div className=\"error\">\r\n            <p className=\"alert\">Zaznacz co chcesz zrobić!</p>\r\n          </div>\r\n        )}\r\n\r\n        {!this.state.input && (\r\n          <div className=\"error\">\r\n            <p className=\"alert\">Wprowadz tekst</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}