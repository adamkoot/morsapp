{"ast":null,"code":"import morseCodes from \"./morseCodes\";\n\nfunction convertToMorse(input) {\n  let output = \"\";\n  let morseArray = input;\n\n  if (morseArray[0] == \".\" || morseArray[0] == \"-\") {\n    morseArray = input.split(\" \");\n  } else {\n    morseArray = input.split(\"\");\n  }\n\n  for (let i = 0; i < morseArray.length; i++) {\n    if (morseArray[i].toUpperCase() == \" \") {\n      output += \"\\xa0\";\n    } else {\n      output += \"\\xa0\" + morseCodes[morseArray[i].toUpperCase()];\n    }\n  }\n\n  this.setState({\n    output,\n    input\n  });\n}","map":{"version":3,"sources":["D:/Studia/semestr 5/biu/projekt1-MarcinRozkwitalski/src/components/morseConverter.js"],"names":["morseCodes","convertToMorse","input","output","morseArray","split","i","length","toUpperCase","setState"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAC1B,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,UAAU,GAAGF,KAAjB;;AACA,MAAGE,UAAU,CAAC,CAAD,CAAV,IAAiB,GAAjB,IAAwBA,UAAU,CAAC,CAAD,CAAV,IAAiB,GAA5C,EAAiD;AAC7CA,IAAAA,UAAU,GAAGF,KAAK,CAACG,KAAN,CAAY,GAAZ,CAAb;AACH,GAFD,MAGK;AACDD,IAAAA,UAAU,GAAGF,KAAK,CAACG,KAAN,CAAY,EAAZ,CAAb;AACH;;AACD,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,UAAU,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,QAAGF,UAAU,CAACE,CAAD,CAAV,CAAcE,WAAd,MAA+B,GAAlC,EAAsC;AAClCL,MAAAA,MAAM,IAAI,MAAV;AACH,KAFD,MAIK;AACDA,MAAAA,MAAM,IAAI,SAASH,UAAU,CAACI,UAAU,CAACE,CAAD,CAAV,CAAcE,WAAd,EAAD,CAA7B;AACH;AACJ;;AACD,OAAKC,QAAL,CAAc;AAACN,IAAAA,MAAD;AAASD,IAAAA;AAAT,GAAd;AACH","sourcesContent":["import morseCodes from \"./morseCodes\";\r\n\r\nfunction convertToMorse(input){\r\n    let output = \"\"\r\n    let morseArray = input\r\n    if(morseArray[0] == \".\" || morseArray[0] == \"-\") {\r\n        morseArray = input.split(\" \")\r\n    }\r\n    else {\r\n        morseArray = input.split(\"\")\r\n    }\r\n    for(let i = 0; i < morseArray.length; i++){\r\n        if(morseArray[i].toUpperCase() == \" \"){\r\n            output += \"\\xa0\"\r\n        }\r\n\r\n        else {\r\n            output += \"\\xa0\" + morseCodes[morseArray[i].toUpperCase()]\r\n        }\r\n    }\r\n    this.setState({output, input})\r\n}"]},"metadata":{},"sourceType":"module"}