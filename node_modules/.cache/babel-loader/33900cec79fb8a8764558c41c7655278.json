{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamk\\\\Desktop\\\\morsapp\\\\morsapp\\\\src\\\\components\\\\Morse.jsx\";\nimport React, { Component } from 'react';\nimport morseCodes from \"./morseCodes\";\nimport morseCodesDotsDashes from \"./morseCodesDotsDashes\";\nimport \"../styles/style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class componentName extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setOption = e => {\n      this.setState({\n        radioOption: e.target.value\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      output: \"\",\n      valueOfA: 0,\n      valueOfB: 0,\n      valueOfKeyword: \"\",\n      radioOption: \"\",\n      textOfFile: \"\",\n      showHideMorse: true,\n      showHideAffine: false,\n      showHideVigenere: false\n    };\n  }\n\n  convert(input) {\n    this.setState({\n      input: input.toLowerCase()\n    }); //to jest mors\n\n    let output = \"\";\n    let morseArray;\n\n    if (this.state.radioOption === \"encrypt\") {\n      morseArray = input.split(\"\");\n\n      for (let i = 0; i < morseArray.length; i++) {\n        if (morseArray[i] === \" \") {\n          output += \" \";\n        } else {\n          output += morseCodes[morseArray[i]];\n        }\n      }\n\n      output += \" \";\n      console.log(output);\n      this.setState({\n        output: output\n      });\n    } else if (this.state.radioOption === \"decrypt\") {\n      morseArray = input.split(\" \");\n\n      for (let i = 0; i < morseArray.length; i++) {\n        output += morseCodesDotsDashes[morseArray[i]];\n      }\n\n      console.log(output);\n      this.setState({\n        output: output\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Alfabet Morse'a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          id: \"input\",\n          value: this.state.input,\n          onChange: e => this.convert(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control-file\",\n        id: \"file\",\n        onChange: e => this.inputTextFromFile(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          id: \"output\",\n          value: this.state.output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.downloadOutputTxtFile,\n        className: \"btn btn-secondary\",\n        children: \"Download output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onChange: event => this.setOption(event),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"encrypt\",\n          name: \"option\",\n          id: \"encrypt\",\n          onChange: this.handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), \"\\xA0encrypt\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"decrypt\",\n          name: \"option\",\n          id: \"decrypt\",\n          onChange: this.handleOptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), \"\\xA0decrypt\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), !this.state.input && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row alert\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alert\",\n            children: \"Wprowadz tekst\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), !this.state.radioOption && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row alert\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"alert\",\n            children: \"Zaznacz co chcesz zrobi\\u0107!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/adamk/Desktop/morsapp/morsapp/src/components/Morse.jsx"],"names":["React","Component","morseCodes","morseCodesDotsDashes","componentName","constructor","props","setOption","e","setState","radioOption","target","value","state","input","output","valueOfA","valueOfB","valueOfKeyword","textOfFile","showHideMorse","showHideAffine","showHideVigenere","convert","toLowerCase","morseArray","split","i","length","console","log","render","inputTextFromFile","downloadOutputTxtFile","event","handleOptionChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport morseCodes from \"./morseCodes\";\r\nimport morseCodesDotsDashes from \"./morseCodesDotsDashes\";\r\nimport \"../styles/style.scss\";\r\n\r\nexport default class componentName extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: \"\",\r\n            output: \"\",\r\n            valueOfA: 0,\r\n            valueOfB: 0,\r\n            valueOfKeyword: \"\",\r\n            radioOption: \"\",\r\n            textOfFile: \"\",\r\n            showHideMorse: true,\r\n            showHideAffine: false,\r\n            showHideVigenere: false,\r\n        };\r\n    }\r\n    setOption = (e) => {\r\n        this.setState({\r\n            radioOption: e.target.value,\r\n        });\r\n    };\r\n\r\n    convert(input) {\r\n        this.setState({ input: input.toLowerCase() });\r\n        //to jest mors\r\n\r\n        let output = \"\";\r\n        let morseArray;\r\n        if (this.state.radioOption === \"encrypt\") {\r\n            morseArray = input.split(\"\");\r\n            for (let i = 0; i < morseArray.length; i++) {\r\n                if (morseArray[i] === \" \") {\r\n                    output += \" \";\r\n                } else {\r\n                    output += morseCodes[morseArray[i]];\r\n                }\r\n            }\r\n            output += \" \";\r\n            console.log(output);\r\n            this.setState({ output: output });\r\n        } else if (this.state.radioOption === \"decrypt\") {\r\n            morseArray = input.split(\" \");\r\n            for (let i = 0; i < morseArray.length; i++) {\r\n                output += morseCodesDotsDashes[morseArray[i]];\r\n            }\r\n            console.log(output);\r\n            this.setState({ output: output });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"col-sm-12\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <h1>Alfabet Morse'a</h1>\r\n                    </div>\r\n                </div>\r\n                <h3>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id=\"input\"\r\n                        value={this.state.input}\r\n                        onChange={(e) => this.convert(e.target.value)}\r\n                    />{\" \"}\r\n                </h3>\r\n                <input\r\n                    type=\"file\"\r\n                    className=\"form-control-file\"\r\n                    id=\"file\"\r\n                    onChange={(e) => this.inputTextFromFile(e)}\r\n                />\r\n                <h3>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id=\"output\"\r\n                        value={this.state.output}\r\n                    />{\" \"}\r\n                </h3>\r\n                <button\r\n                    onClick={this.downloadOutputTxtFile}\r\n                    className=\"btn btn-secondary\"\r\n                >\r\n                    Download output\r\n                </button>\r\n                <div onChange={(event) => this.setOption(event)}>\r\n                    <input\r\n                        type=\"radio\"\r\n                        value=\"encrypt\"\r\n                        name=\"option\"\r\n                        id=\"encrypt\"\r\n                        onChange={this.handleOptionChange}\r\n                    />\r\n                    &nbsp;encrypt&nbsp;&nbsp;&nbsp;\r\n                    <input\r\n                        type=\"radio\"\r\n                        value=\"decrypt\"\r\n                        name=\"option\"\r\n                        id=\"decrypt\"\r\n                        onChange={this.handleOptionChange}\r\n                    />\r\n                    &nbsp;decrypt\r\n                </div>\r\n            \r\n                {!this.state.input && (\r\n                    <div className=\"row alert\">\r\n                        <div className=\"col-sm-12\">\r\n                            <p className=\"alert\">Wprowadz tekst</p>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {!this.state.radioOption && (\r\n                    <div className=\"row alert\">\r\n                        <div className=\"col-sm-12\">\r\n                            <h3 className=\"alert\">Zaznacz co chcesz zrobić!</h3>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}